package edu.cnm.deepdive.marblemaze.controller;

import android.os.Bundle;
import android.text.Editable;
import android.text.TextWatcher;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.lifecycle.ViewModelProvider;
import com.google.android.material.bottomsheet.BottomSheetDialogFragment;
import edu.cnm.deepdive.marblemaze.databinding.FragmentEditGameBinding;
import edu.cnm.deepdive.marblemaze.model.entity.Game;
import edu.cnm.deepdive.marblemaze.viewmodel.GameViewModel;

public class EditGameFragment
    extends BottomSheetDialogFragment implements TextWatcher {

  private FragmentEditGameBinding binding;
  private GameViewModel viewModel;
  private long gameId;
  private Game game;

  @Override
  public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    EditGameFragmentArgs args = EditGameFragmentArgs.fromBundle(
        getArguments()); //generated for us by navigation framework
    gameId = args.getGameId(); //autogenerated getGameId from navgraph argument name
  }

  @Override
  public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
      Bundle savedInstanceState) {
    binding = FragmentEditGameBinding.inflate(inflater, container, false);
    binding.size.addTextChangedListener(this);
    binding.speed.addTextChangedListener(this);
    binding.time.addTextChangedListener(this);
    binding.completed.addTextChangedListener(this);
    binding.cancel.setOnClickListener((v) -> dismiss());
    binding.save.setOnClickListener((v) -> {
      game.setSize(Integer.parseInt(binding.size.getText().toString().trim()));
      game.setSpeed(Integer.parseInt(binding.speed.getText().toString().trim()));
      game.setTime(Integer.parseInt(binding.time.getText().toString().trim()));
      game.setCompleted(binding.completed.isChecked());
      viewModel.save(game);
      dismiss();
    });
    return binding.getRoot();
  }

  @Override
  public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {
    super.onViewCreated(view, savedInstanceState);
    viewModel = new ViewModelProvider(this).get(GameViewModel.class);
    if (gameId != 0) { //previous game
      //TODO Set gameID in viewmodel and observe viewmodel.getGame()
      //viewModel.getGame()
    } else { //new game
      game = new Game();
    }
  }

  @Override
  public void onDestroyView() {
    super.onDestroyView();
    binding = null;
  }

  @Override
  public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {
    //Do nothing.
  }

  @Override
  public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {
    //Do nothing.
  }

  @Override
  public void afterTextChanged(Editable editable) {
    checkSubmitConditions();
  }

  private void checkSubmitConditions() {
    String size = binding.size.getText().toString();
    String speed = binding.speed.getText().toString();
    String time = binding.time.getText().toString();
    String completed = binding.completed.getText().toString();
    binding.save.setEnabled(
        !size.isEmpty() && !speed.isEmpty() && !time.isEmpty() && !completed.isEmpty());
  }
}